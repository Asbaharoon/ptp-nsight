//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.02.22 at 09:47:01 AM CET 
//


package org.eclipse.ptp.rm.lml.internal.core.elements;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				Defines which main tags are allowed in LML.
 * 			
 * 
 * <p>Java class for lgui_type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="lgui_type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence minOccurs="0">
 *         &lt;element name="request" type="{http://eclipse.org/ptp/schemas}RequestType" minOccurs="0"/>
 *         &lt;sequence maxOccurs="unbounded" minOccurs="0">
 *           &lt;sequence minOccurs="0">
 *             &lt;element name="objects" type="{http://eclipse.org/ptp/schemas}objects_type" minOccurs="0"/>
 *             &lt;element name="relations" type="{http://eclipse.org/ptp/schemas}relations_type" minOccurs="0"/>
 *             &lt;element name="information" type="{http://eclipse.org/ptp/schemas}information_type" minOccurs="0"/>
 *             &lt;element name="table" type="{http://eclipse.org/ptp/schemas}table_type" minOccurs="0"/>
 *             &lt;element name="usagebar" type="{http://eclipse.org/ptp/schemas}usagebar_type" minOccurs="0"/>
 *             &lt;element name="text" type="{http://eclipse.org/ptp/schemas}textbox_type" minOccurs="0"/>
 *             &lt;element name="infobox" type="{http://eclipse.org/ptp/schemas}infobox_type" minOccurs="0"/>
 *             &lt;element name="nodedisplay" type="{http://eclipse.org/ptp/schemas}nodedisplay" minOccurs="0"/>
 *             &lt;element name="chart" type="{http://eclipse.org/ptp/schemas}chart_type" minOccurs="0"/>
 *             &lt;element name="chartgroup" type="{http://eclipse.org/ptp/schemas}chartgroup_type" minOccurs="0"/>
 *           &lt;/sequence>
 *           &lt;sequence minOccurs="0">
 *             &lt;element name="splitlayout" type="{http://eclipse.org/ptp/schemas}splitlayout_type" minOccurs="0"/>
 *             &lt;element name="abslayout" type="{http://eclipse.org/ptp/schemas}abslayout_type" minOccurs="0"/>
 *             &lt;element name="nodedisplaylayout" type="{http://eclipse.org/ptp/schemas}nodedisplaylayout_type" minOccurs="0"/>
 *             &lt;element name="usagebarlayout" type="{http://eclipse.org/ptp/schemas}usagebarlayout_type" minOccurs="0"/>
 *             &lt;element name="chartlayout" type="{http://eclipse.org/ptp/schemas}chartlayout_type" minOccurs="0"/>
 *             &lt;element name="tablelayout" type="{http://eclipse.org/ptp/schemas}tablelayout_type" minOccurs="0"/>
 *             &lt;element name="infoboxlayout" type="{http://eclipse.org/ptp/schemas}infoboxlayout_type" minOccurs="0"/>
 *             &lt;element name="textlayout" type="{http://eclipse.org/ptp/schemas}infoboxlayout_type" minOccurs="0"/>
 *           &lt;/sequence>
 *         &lt;/sequence>
 *       &lt;/sequence>
 *       &lt;attribute name="version" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="layout" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "lgui_type", propOrder = {
    "request",
    "objectsAndRelationsAndInformation"
})
public class LguiType {

    protected RequestType request;
    @XmlElementRefs({
        @XmlElementRef(name = "objects", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "textlayout", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "usagebarlayout", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "text", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "table", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "nodedisplaylayout", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "infobox", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "nodedisplay", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "splitlayout", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "chartgroup", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "relations", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "information", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "chart", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "infoboxlayout", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "tablelayout", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "usagebar", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "abslayout", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "chartlayout", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> objectsAndRelationsAndInformation;
    @XmlAttribute(name = "version")
    protected String version;
    @XmlAttribute(name = "layout")
    protected Boolean layout;

    /**
     * Gets the value of the request property.
     * 
     * @return
     *     possible object is
     *     {@link RequestType }
     *     
     */
    public RequestType getRequest() {
        return request;
    }

    /**
     * Sets the value of the request property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestType }
     *     
     */
    public void setRequest(RequestType value) {
        this.request = value;
    }

    /**
     * Gets the value of the objectsAndRelationsAndInformation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the objectsAndRelationsAndInformation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getObjectsAndRelationsAndInformation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link ObjectsType }{@code >}
     * {@link JAXBElement }{@code <}{@link InfoboxlayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link TextboxType }{@code >}
     * {@link JAXBElement }{@code <}{@link UsagebarlayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link TableType }{@code >}
     * {@link JAXBElement }{@code <}{@link NodedisplaylayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link InfoboxType }{@code >}
     * {@link JAXBElement }{@code <}{@link Nodedisplay }{@code >}
     * {@link JAXBElement }{@code <}{@link SplitlayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link ChartgroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link RelationsType }{@code >}
     * {@link JAXBElement }{@code <}{@link ChartType }{@code >}
     * {@link JAXBElement }{@code <}{@link InformationType }{@code >}
     * {@link JAXBElement }{@code <}{@link InfoboxlayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link TablelayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link UsagebarType }{@code >}
     * {@link JAXBElement }{@code <}{@link AbslayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link ChartlayoutType }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getObjectsAndRelationsAndInformation() {
        if (objectsAndRelationsAndInformation == null) {
            objectsAndRelationsAndInformation = new ArrayList<JAXBElement<?>>();
        }
        return this.objectsAndRelationsAndInformation;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the layout property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isLayout() {
        if (layout == null) {
            return false;
        } else {
            return layout;
        }
    }

    /**
     * Sets the value of the layout property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setLayout(Boolean value) {
        this.layout = value;
    }

}
